#!/usr/bin/env perl

use strict;
use warnings;

# you might need to change these to fit your setup
use lib '/usr/share/rtpg-www';
my $rpc_url = 'http://scgi.rtorrent.nix.is/RPC2';
my $complete_dir = '/home/leech/torrent/complete';

use List::Util 'first';
use RTPG;

# accessing the xml-rpc interface will hang unless we fork
exit if fork;

my ($hash, $action) = @ARGV;
my $rtpg = RTPG->new(url => $rpc_url);

my $size = $rtpg->rpc_command('d.get_size_bytes', $hash);
my $file = $rtpg->rpc_command('d.get_loaded_file', $hash);
my @log_values = ($action, time, $hash, $size, 0, $file);

if ($action eq 'enqueue' or $action eq 'erased') {
    torrentlog(@log_values);
}
elsif ($action eq 'finish') {
    my $content = $rtpg->rpc_command('d.get_name', $hash);
    chdir $complete_dir;
    my @rars;
    if (-d $content) {
        push @rars, files_to_unrar($content);
        push @rars, files_to_unrar($_) for grep { -d } glob "$content/CD*";
    }

    $log_values[4] = scalar @rars;
    torrentlog(@log_values);

    if (@rars) {
        my $unrar_start = time;
        for my $rar (@rars) {
            system "unrar x -o+ '$rar'";
        }
        my $unrar_finish = time;

        @log_values = ('unrar', $unrar_start, $unrar_finish, scalar @rars, $file);
        torrentlog(@log_values);
    }
}

sub torrentlog
{
    my @values = @_;
    open my $log, ">>", "/tmp/torrentlog" or die "Can't open torrentlog: $!";
    print $log join(',', @values), "\n";
    close $log;
}

sub files_to_unrar {
    my ($dir) = @_;

    my @files = sort grep { chomp; /\.r(?:ar|\d+)$/ } qx/find '$dir' -maxdepth 1/;
    if (@files) {
        my $target = $files[0];
        if (my ($rar) = first { /\.rar$/ } @files) {
            $target = $rar;
        }

        # extract if the archive only has one file
        my @file_count = split /\n/, qx/unrar lb '$target'/;
        if (@file_count == 1) {
            return $target;
        }
    }
}
