#!/usr/bin/env perl
use strict;
use warnings;
use File::Spec::Functions 'catfile';
use FindBin;
use List::Util 'first';
use YAML::Any 'LoadFile';

my $config = LoadFile(catfile($FindBin::Bin, 'utor.yml'));

my ($action, $hash, $size, $file, $name) = @ARGV;
my @log_values = ($action, time, $hash, $size, 0, $file);

if ($action eq 'inserted_new') {
    torrentlog(@log_values);
}
elsif ($action eq 'finished') {
    my $content = $name;
    chdir $config->{complete_dir};
    my @rars;
    if (-d $content) {
        push @rars, files_to_unrar($content);
        push @rars, files_to_unrar($_) for grep { -d } glob "$content/CD*";
    }

    $log_values[4] = scalar @rars;
    torrentlog(@log_values);

    if (@rars) {
        my $unrar_start = time;
        for my $rar (@rars) {
            system "unrar x -o+ '$rar'" and die "Can't unrar '$rar': $!";
        }
        my $unrar_finish = time;

        @log_values = ('unrar', $unrar_start, $unrar_finish, scalar @rars, $file);
        torrentlog(@log_values);
    }
}

sub torrentlog
{
    my @values = @_;
    open my $log, ">>", $config->{log_file} or die "Can't open torrentlog: $!";
    print $log join(',', @values), "\n";
    close $log;
}

sub files_to_unrar {
    my ($dir) = @_;

    my @files = sort grep { chomp; /\.r(?:ar|\d+)$/ } qx/find '$dir' -maxdepth 1/;
    if (@files) {
        my $target = $files[0];
        if (my ($rar) = first { /\.rar$/ } @files) {
            $target = $rar;
        }

        # extract if the archive only has one file
        my @file_count = split /\n/, qx/unrar lb '$target'/;
        if (@file_count == 1) {
            return $target;
        }
    }
}
